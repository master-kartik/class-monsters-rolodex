{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kochh\\\\Documents\\\\react-ztm\\\\class-1\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(users => {\n      monster: users;\n    }), () => console.log(users));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, 'id', false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","Component","jsxDEV","_jsxDEV","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","monster","console","log","render","className","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/kochh/Documents/react-ztm/class-1/monsters-rolodex/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response)=> response.json())\n    .then((users)=> this.setState((users)=> {monster: users}),()=>console.log(users))\n  }\n    render(){\n      return (\n        <div className='App'>\n          {this.state.monsters.map((monster) => {\n            return <h1 key={'id'}>{monster.name}</h1>\n          })}\n        </div>\n      )\n    }\n  }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1BI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH;EACAC,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAClCF,IAAI,CAAEG,KAAK,IAAI,IAAI,CAACC,QAAQ,CAAED,KAAK,IAAI;MAACE,OAAO,EAAEF,KAAK;IAAA,CAAC,CAAC,EAAC,MAAIG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC;EACnF;EACEK,MAAMA,CAAA,EAAE;IACN,oBACEf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjB,IAAI,CAACd,KAAK,CAACC,QAAQ,CAACc,GAAG,CAAEN,OAAO,IAAK;QACpC,oBAAOZ,OAAA;UAAAiB,QAAA,EAAgBL,OAAO,CAACO;QAAI,GAAnB,IAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC;MAC3C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEF,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}